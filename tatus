[1mdiff --git a/installation_complete.bat b/installation_complete.bat[m
[1mnew file mode 100644[m
[1mindex 0000000..9399a73[m
[1m--- /dev/null[m
[1m+++ b/installation_complete.bat[m
[36m@@ -0,0 +1,135 @@[m
[32m+[m[32m@echo off[m
[32m+[m[32msetlocal enabledelayedexpansion[m
[32m+[m
[32m+[m[32mecho ================================================[m
[32m+[m[32mecho     Installation AnimeSamaCLI pour Windows[m
[32m+[m[32mecho ================================================[m
[32m+[m[32mecho.[m
[32m+[m
[32m+[m[32mecho Demande de privileges administrateur...[m
[32m+[m[32mif not "%1"=="am_admin" ([m
[32m+[m[32m    powershell -Command "Start-Process -Verb RunAs -FilePath '%0' -ArgumentList 'am_admin'"[m
[32m+[m[32m    exit /b[m
[32m+[m[32m)[m
[32m+[m
[32m+[m[32mwhere python >nul 2>&1[m
[32m+[m[32mif %errorlevel% equ 0 ([m
[32m+[m[32m    echo Python est deja installe.[m
[32m+[m[32m    python --version[m
[32m+[m[32m    set PYTHON_CMD=python[m
[32m+[m[32m) else ([m
[32m+[m[32m    echo Python n'est pas installe. Installation en cours...[m
[32m+[m[32m    echo.[m
[32m+[m[32m    echo Telechargement de Python 3.12...[m
[32m+[m[32m    mkdir temp_install 2>nul[m
[32m+[m[32m    cd temp_install[m
[32m+[m[41m    [m
[32m+[m[32m    curl -L -o python_installer.exe https://www.python.org/ftp/python/3.12.0/python-3.12.0-amd64.exe[m
[32m+[m[41m    [m
[32m+[m[32m    if exist "python_installer.exe" ([m
[32m+[m[32m        echo Installation de Python 3.12 (cela peut prendre un moment)...[m
[32m+[m[32m        python_installer.exe /quiet InstallAllUsers=1 PrependPath=1 Include_test=0 Include_doc=0[m
[32m+[m[32m        timeout /t 5 /nobreak > nul[m
[32m+[m[32m        echo Python 3.12 installe![m
[32m+[m[32m    ) else ([m
[32m+[m[32m        echo Impossible de telecharger Python. Veuillez l'installer manuellement.[m
[32m+[m[32m        echo https://www.python.org/downloads/[m
[32m+[m[32m        pause[m
[32m+[m[32m        exit /b 1[m
[32m+[m[32m    )[m
[32m+[m[41m    [m
[32m+[m[32m    cd ..[m
[32m+[m[32m    rmdir /S /Q temp_install 2>nul[m
[32m+[m[32m    set PYTHON_CMD=python[m
[32m+[m[32m)[m
[32m+[m
[32m+[m[32mecho.[m
[32m+[m[32mecho Installation des modules Python...[m
[32m+[m[32m%PYTHON_CMD% -m pip install --upgrade pip[m
[32m+[m[32m%PYTHON_CMD% -m pip install requests beautifulsoup4 windows-curses[m
[32m+[m
[32m+[m[32mecho.[m
[32m+[m[32mecho ================================================[m
[32m+[m[32mecho     Installation de MPV[m
[32m+[m[32mecho ================================================[m
[32m+[m[32mecho.[m
[32m+[m
[32m+[m[32mif exist "%ProgramFiles%\mpv\mpv.exe" ([m
[32m+[m[32m    echo MPV est deja installe.[m
[32m+[m[32m    set "MPV_PATH=%ProgramFiles%\mpv"[m
[32m+[m[32m) else ([m
[32m+[m[32m    echo Installation de MPV...[m
[32m+[m[41m    [m
[32m+[m[32m    mkdir mpv_install 2>nul[m
[32m+[m[32m    cd mpv_install[m
[32m+[m[41m    [m
[32m+[m[32m    echo Telechargement de MPV...[m
[32m+[m[32m    curl -L -o mpv.7z https://github.com/shinchiro/mpv-winbuild-cmake/releases/latest/download/mpv-x86_64-v3.7z[m
[32m+[m[41m    [m
[32m+[m[32m    if not exist "mpv.7z" ([m
[32m+[m[32m        echo Tentative alternative de t√©l√©chargement...[m
[32m+[m[32m        curl -L -o mpv.7z https://sourceforge.net/projects/mpv-player-windows/files/64bit/mpv-x86_64-20240414-git-1d52935.7z/download[m
[32m+[m[32m    )[m
[32m+[m[41m    [m
[32m+[m[32m    if not exist "mpv.7z" ([m
[32m+[m[32m        echo Impossible de telecharger MPV.[m[41m [m
[32m+[m[32m        cd ..[m
[32m+[m[32m        rmdir /S /Q mpv_install 2>nul[m
[32m+[m[32m        goto SkipMPV[m
[32m+[m[32m    )[m
[32m+[m[41m    [m
[32m+[m[32m    curl -L -o 7z.exe https://www.7-zip.org/a/7zr.exe[m
[32m+[m[41m    [m
[32m+[m[32m    if not exist "7z.exe" ([m
[32m+[m[32m        echo Impossible de telecharger l'utilitaire d'extraction.[m
[32m+[m[32m        cd ..[m
[32m+[m[32m        rmdir /S /Q mpv_install 2>nul[m
[32m+[m[32m        goto SkipMPV[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    echo Extraction de MPV...[m
[32m+[m[32m    7z.exe x mpv.7z -y[m
[32m+[m[41m    [m
[32m+[m[32m    echo Installation de MPV...[m
[32m+[m[41m    [m
[32m+[m[32m    if not exist "%ProgramFiles%\mpv" mkdir "%ProgramFiles%\mpv" 2>nul[m
[32m+[m[32m    if exist "%ProgramFiles%\mpv" ([m
[32m+[m[32m        xcopy /E /Y mpv-* "%ProgramFiles%\mpv\"[m
[32m+[m[32m        set "MPV_PATH=%ProgramFiles%\mpv"[m
[32m+[m[32m    ) else ([m
[32m+[m[32m        if not exist "%USERPROFILE%\mpv" mkdir "%USERPROFILE%\mpv" 2>nul[m
[32m+[m[32m        xcopy /E /Y mpv-* "%USERPROFILE%\mpv\"[m
[32m+[m[32m        set "MPV_PATH=%USERPROFILE%\mpv"[m
[32m+[m[32m    )[m
[32m+[m[41m    [m
[32m+[m[32m    cd ..[m
[32m+[m[32m    rmdir /S /Q mpv_install 2>nul[m
[32m+[m[41m    [m
[32m+[m[32m    echo Ajout de MPV au PATH...[m
[32m+[m[32m    setx PATH "%PATH%;%MPV_PATH%" /M[m
[32m+[m[32m)[m
[32m+[m
[32m+[m[32mecho.[m
[32m+[m[32mecho Configuration de MPV...[m
[32m+[m[32mecho # Configuration du lecteur multimedia > config.ini[m
[32m+[m[32mecho default_player=1 >> config.ini[m
[32m+[m
[32m+[m[32mecho @echo off > "%USERPROFILE%\open_mpv.bat"[m
[32m+[m[32mecho "%MPV_PATH%\mpv.exe" %%1 >> "%USERPROFILE%\open_mpv.bat"[m
[32m+[m
[32m+[m[32m:SkipMPV[m
[32m+[m[32mecho.[m
[32m+[m[32mecho ================================================[m
[32m+[m[32mecho  Installation terminee![m
[32m+[m[32mecho.[m
[32m+[m[32mecho  IMPORTANT:[m[41m [m
[32m+[m[32mecho  - Redemarrez votre invite de commande pour[m[41m [m
[32m+[m[32mecho    que les changements prennent effet[m
[32m+[m[32mecho  - Si les videos ne s'ouvrent pas dans MPV,[m[41m [m
[32m+[m[32mecho    utilisez: %USERPROFILE%\open_mpv.bat [URL][m
[32m+[m[32mecho.[m
[32m+[m[32mecho  Pour lancer AnimeSamaCLI:[m
[32m+[m[32mecho  python anime-sama.py[m
[32m+[m[32mecho ================================================[m
[32m+[m
[32m+[m[32mpause[m[41m [m
\ No newline at end of file[m
[1mdiff --git a/utils/features.py b/utils/features.py[m
[1mindex 4f92331..0c6c60c 100644[m
[1m--- a/utils/features.py[m
[1m+++ b/utils/features.py[m
[36m@@ -9,6 +9,86 @@[m [mfrom utils.downloader import AnimeDownloader, get_episode_list, HEADERS_BASE[m
 from utils.ui import display_menu, display_upcoming_menu[m
 from utils.db_manager import add_to_history[m
 import platform[m
[32m+[m[32mimport os[m
[32m+[m
[32m+[m[32mdef get_player_config():[m
[32m+[m[32m    # Fonction pour lire la configuration du lecteur √† utiliser[m
[32m+[m[32m    config_path = os.path.join(os.path.dirname(os.path.dirname(os.path.abspath(__file__))), "config.ini")[m
[32m+[m[32m    default_player = 0  # 0 = Navigateur, 1 = MPV, 2 = VLC[m
[32m+[m[41m    [m
[32m+[m[32m    if os.path.exists(config_path):[m
[32m+[m[32m        try:[m
[32m+[m[32m            with open(config_path, 'r') as f:[m
[32m+[m[32m                for line in f:[m
[32m+[m[32m                    if line.startswith('default_player='):[m
[32m+[m[32m                        value = line.strip().split('=')[1][m
[32m+[m[32m                        if value.isdigit():[m
[32m+[m[32m                            default_player = int(value)[m
[32m+[m[32m        except:[m
[32m+[m[32m            pass[m
[32m+[m[41m    [m
[32m+[m[32m    return default_player[m
[32m+[m
[32m+[m[32mdef play_video(video_url, debug_mode=False):[m
[32m+[m[32m    # Fonction pour lire une vid√©o avec le lecteur configur√©[m
[32m+[m[32m    system = platform.system()[m
[32m+[m[32m    player_config = get_player_config()[m
[32m+[m[41m    [m
[32m+[m[32m    if system == "Windows":[m
[32m+[m[32m        try:[m
[32m+[m[32m            if player_config == 1:  # MPV[m
[32m+[m[32m                if os.path.exists(os.path.join(os.environ.get('ProgramFiles', 'C:\\Program Files'), 'mpv', 'mpv.exe')):[m
[32m+[m[32m                    batch_path = os.path.join(os.environ.get('USERPROFILE', ''), 'open_with_mpv.bat')[m
[32m+[m[32m                    subprocess.run([batch_path, video_url], check=True, shell=True)[m
[32m+[m[32m                    print("Lecture de la vid√©o avec MPV")[m
[32m+[m[32m                    return True[m
[32m+[m[32m                else:[m
[32m+[m[32m                    if debug_mode:[m
[32m+[m[32m                        print("[DEBUG] MPV n'est pas install√©, essai de VLC...")[m
[32m+[m[41m            [m
[32m+[m[32m            if player_config == 2 or (player_config == 1 and not os.path.exists(os.path.join(os.environ.get('ProgramFiles', 'C:\\Program Files'), 'mpv', 'mpv.exe'))):  # VLC ou fallback si MPV pas trouv√©[m
[32m+[m[32m                vlc_path = os.path.join(os.environ.get('ProgramFiles', 'C:\\Program Files'), 'VideoLAN', 'VLC', 'vlc.exe')[m
[32m+[m[32m                if os.path.exists(vlc_path):[m
[32m+[m[32m                    batch_path = os.path.join(os.environ.get('USERPROFILE', ''), 'open_with_vlc.bat')[m
[32m+[m[32m                    if os.path.exists(batch_path):[m
[32m+[m[32m                        subprocess.run([batch_path, video_url], check=True, shell=True)[m
[32m+[m[32m                    else:[m
[32m+[m[32m                        subprocess.run([vlc_path, video_url], check=True, shell=True)[m
[32m+[m[32m                    print("Lecture de la vid√©o avec VLC")[m
[32m+[m[32m                    return True[m
[32m+[m[32m                else:[m
[32m+[m[32m                    if debug_mode:[m
[32m+[m[32m                        print("[DEBUG] VLC n'est pas install√©, utilisation du navigateur...")[m
[32m+[m[41m            [m
[32m+[m[32m            # Fallback sur le navigateur[m
[32m+[m[32m            import webbrowser[m
[32m+[m[32m            webbrowser.open(video_url)[m
[32m+[m[32m            print("Ouverture de la vid√©o dans le navigateur par d√©faut")[m
[32m+[m[32m            return True[m
[32m+[m[41m            [m
[32m+[m[32m        except Exception as e:[m
[32m+[m[32m            if debug_mode:[m
[32m+[m[32m                print(f"[DEBUG] Erreur lors du lancement du lecteur: {e}")[m
[32m+[m[32m            try:[m
[32m+[m[32m                import webbrowser[m
[32m+[m[32m                webbrowser.open(video_url)[m
[32m+[m[32m                print("Ouverture de la vid√©o dans le navigateur par d√©faut")[m
[32m+[m[32m                return True[m
[32m+[m[32m            except:[m
[32m+[m[32m                return False[m
[32m+[m[32m    else:[m
[32m+[m[32m        # Linux, macOS[m
[32m+[m[32m        try:[m
[32m+[m[32m            subprocess.run(['mpv', video_url, '--fullscreen'], check=True)[m
[32m+[m[32m            return True[m
[32m+[m[32m        except:[m
[32m+[m[32m            try:[m
[32m+[m[32m                import webbrowser[m
[32m+[m[32m                webbrowser.open(video_url)[m
[32m+[m[32m                print("Ouverture de la vid√©o dans le navigateur par d√©faut")[m
[32m+[m[32m                return True[m
[32m+[m[32m            except:[m
[32m+[m[32m                return False[m
 [m
 def fetch_and_display_episodes(stdscr, anime_url):[m
     # r√©cup√®re et affiche les √©pisodes d'un anime[m
[36m@@ -40,22 +120,10 @@[m [mdef fetch_and_display_episodes(stdscr, anime_url):[m
 [m
                 curses.endwin()[m
 [m
[31m-                try:[m
[31m-                    system = platform.system()[m
[31m-                    if system == "Windows":[m
[31m-                        # Utiliser un player adapt√© √† Windows[m
[31m-                        try:[m
[31m-                            # Essayer avec MPV d'abord si disponible[m
[31m-                            subprocess.run(['mpv', video_url, '--fullscreen'], check=True, shell=True)[m
[31m-                        except:[m
[31m-                            # Sinon essayer avec VLC qui est plus courant sur Windows[m
[31m-                            import webbrowser[m
[31m-                            webbrowser.open(video_url)[m
[31m-                            print("Ouverture de la vid√©o dans le navigateur par d√©faut")[m
[31m-                    else:[m
[31m-                        # Linux, macOS[m
[31m-                        subprocess.run(['mpv', video_url, '--fullscreen'], check=True)[m
[31m-[m
[32m+[m[32m                # Utiliser la fonction play_video pour lire la vid√©o[m
[32m+[m[32m                success = play_video(video_url, debug_mode=False)[m
[32m+[m[41m                [m
[32m+[m[32m                if success:[m
                     anime_name = anime_url.split('/')[0].replace('-', ' ').title()[m
                     saison = anime_url.split('/')[1].replace('saison', 'Saison ').capitalize()[m
                     add_to_history([m
[36m@@ -65,11 +133,9 @@[m [mdef fetch_and_display_episodes(stdscr, anime_url):[m
                         url=full_url,[m
                         debug=False[m
                     )[m
[31m-                except subprocess.CalledProcessError as e:[m
[31m-                    print(f"Erreur lors du lancement du lecteur vid√©o: {e}")[m
[31m-                except FileNotFoundError:[m
[31m-                    print(f"Erreur: Le lecteur vid√©o n'est pas install√© sur votre syst√®me")[m
[31m-                    print("Sur Windows, installez MPV ou VLC. Sur Linux, installez mpv.")[m
[32m+[m[32m                else:[m
[32m+[m[32m                    print("Erreur lors de la lecture de la vid√©o")[m
[32m+[m[32m                    print("V√©rifiez si MPV ou VLC est correctement install√©")[m
             else:[m
                 stdscr.addstr("Impossible de r√©cup√©rer l'URL de la vid√©o\n")[m
         else:[m
[36m@@ -327,22 +393,9 @@[m [mdef search_anime(stdscr, query, vf_mode=False, debug_mode=False):[m
                         if video_url.startswith('//'):[m
                             video_url = 'https:' + video_url[m
                         [m
[31m-                        try:[m
[31m-                            system = platform.system()[m
[31m-                            if system == "Windows":[m
[31m-                                # Utiliser un player adapt√© √† Windows[m
[31m-                                try:[m
[31m-                                    # Essayer avec MPV d'abord si disponible[m
[31m-                                    subprocess.run(['mpv', video_url, '--fullscreen'], check=True, shell=True)[m
[31m-                                except:[m
[31m-                                    # Sinon essayer avec VLC qui est plus courant sur Windows[m
[31m-                                    import webbrowser[m
[31m-                                    webbrowser.open(video_url)[m
[31m-                                    print("Ouverture de la vid√©o dans le navigateur par d√©faut")[m
[31m-                            else:[m
[31m-                                # Linux, macOS[m
[31m-                                subprocess.run(['mpv', video_url, '--fullscreen'], check=True)[m
[31m-                                [m
[32m+[m[32m                        success = play_video(video_url, debug_mode)[m
[32m+[m[41m                        [m
[32m+[m[32m                        if success:[m
                             add_to_history([m
                                 anime_name=animes[selected_anime],[m
                                 episode=f"Episode {episode_num}",[m
[36m@@ -350,14 +403,8 @@[m [mdef search_anime(stdscr, query, vf_mode=False, debug_mode=False):[m
                                 url=season_url,[m
                                 debug=debug_mode[m
                             )[m
[31m-                        except subprocess.CalledProcessError as e:[m
[31m-                            if debug_mode:[m
[31m-                                print(f"[DEBUG] Erreur lors du lancement du lecteur vid√©o: {e}")[m
[31m-                            else:[m
[31m-                                print(f"‚úó Erreur lors du lancement du lecteur vid√©o")[m
[31m-                        except FileNotFoundError:[m
[31m-                            print(f"‚úó Erreur: Le lecteur vid√©o n'est pas install√© sur votre syst√®me")[m
[31m-                            print("Sur Windows, installez MPV ou VLC. Sur Linux, installez mpv.")[m
[32m+[m[32m                        else:[m
[32m+[m[32m                            print("‚úó Erreur lors de la lecture de la vid√©o")[m
                     else:[m
                         print("‚úó Impossible de r√©cup√©rer l'URL de la vid√©o")[m
                 else:[m
